B  
 �B_}`�@s�dZdZd�eee��ZddlZddlZejddkZ	e	r>eZ 
 ej�d�r�ddlZe� �ddZe�d�rrdZq�e�d        �r�d 
 Zq�dZnejZd4d d�Zd5dd�Zd6dd�Zd7dd�Zd8dd�Zd9dd�Zd:dd�ZGdd�de�Zdd�Zd d!�Zd"d#�Zd$d%�Zedk�r�yddlZeZWnne k 
 �r�ydd&l!m"Z"eZWnBe k 
 �r�yddl#Z$eZWne k 
 �r�eZYnXYnXYnXe%d'k�r�d(Z&d)Z'd*Z(e)d+e�e)d,�ee&e'd-d.�Z*x$e(D]Z+e)d/e+e,e*e+�f��q�We)d0�ee&e'�Z*x$e(D]Z+e)d/e+e,e*e+�f��qWe)d1�ee&�Z*x$e(D]Z+e)d/e+e,e*e+�f��q:We)d2�ee&dd3�Z*x$e(D]Z+e)d/e+e,e*e+�f��qtWdS);zyUtilities for determining application-specific dirs. 
  
 See <http://github.com/ActiveState/appdirs> for details and usage. 
 )����.�Nr�java�Windows�win32ZMac�darwinZlinux2FcCs�tdkr^|dkr|}|rdpd}tj�t|��}|r�|dk	rNtj�|||�}q�tj�||�}nNtdkr�tj�d�}|r�tj�||�}n&t�dtj�d	��}|r�tj�||�}|r�|r�tj�||�}|S) 
 aJReturn full path to the user-specific data dir for this application. 
  
         "appname" is the name of application. 
             If None, just the system directory is returned. 
         "appauthor" (only used on Windows) is the name of the 
             appauthor or distributing body for this application. Typically 
             it is the owning company name. This falls back to appname. You may 
             pass False to disable it. 
         "version" is an optional version path element to append to the 
             path. You might want to use this if you want multiple versions 
             of your app to be able to run independently. If used, this 
             would typically be "<major>.<minor>". 
             Only applied when appname is present. 
         "roaming" (boolean, default False) can be set True to use the Windows 
             roaming appdata directory. That means that for users on a Windows 
             network setup for roaming profiles, this user data will be 
             sync'd on login. See 
             <http://technet.microsoft.com/en-us/library/cc766489(WS.10).aspx> 
             for a discussion of issues. 
  
     Typical user data directories are: 
         Mac OS X:               ~/Library/Application Support/<AppName> 
         Unix:                   ~/.local/share/<AppName>    # or in $XDG_DATA_HOME, if defined 
         Win XP (not roaming):   C:\Documents and Settings\<username>\Application Data\<AppAuthor>\<AppName> 
         Win XP (roaming):       C:\Documents and Settings\<username>\Local Settings\Application Data\<AppAuthor>\<AppName> 
         Win 7  (not roaming):   C:\Users\<username>\AppData\Local\<AppAuthor>\<AppName> 
         Win 7  (roaming):       C:\Users\<username>\AppData\Roaming\<AppAuthor>\<AppName> 
  
     For Unix, we follow the XDG spec and support $XDG_DATA_HOME. 
     That means, by default "~/.local/share/<AppName>". 
     rN� CSIDL_APPDATA�CSIDL_LOCAL_APPDATAFr        z~/Library/Application Support/� XDG_DATA_HOMEz~/.local/share)�system�os�path�normpath�_get_win_folder�join� 
 expanduser�getenv)�appname�	appauthor�version�roaming�constr�r�bC:\Users\cyber\AppData\Local\Temp\pip-install-benmykki\setuptools\pkg_resources\_vendor\appdirs.py� user_data_dir-s& rcstdkrR|dkr�}tj�td��}�r�|dk	rBtj�||��}q�tj�|��}n�tdkrztj�d�}�r�tj�|��}ntt�dtj�dd	g��}d 
 d�|�	tj�D�}�r�|r�tj��|���fdd�|D�}|r�tj�|�}n|d }|S��r|�rtj�||�}|S)aiReturn full path to the user-shared data dir for this application. 
  
         "appname" is the name of application. 
             If None, just the system directory is returned. 
         "appauthor" (only used on Windows) is the name of the 
             appauthor or distributing body for this application. Typically 
             it is the owning company name. This falls back to appname. You may 
             pass False to disable it. 
         "version" is an optional version path element to append to the 
             path. You might want to use this if you want multiple versions 
             of your app to be able to run independently. If used, this 
             would typically be "<major>.<minor>". 
             Only applied when appname is present. 
         "multipath" is an optional parameter only applicable to *nix 
             which indicates that the entire list of data dirs should be 
             returned. By default, the first item from XDG_DATA_DIRS is 
             returned, or '/usr/local/share/<AppName>', 
             if XDG_DATA_DIRS is not set 
  
     Typical site data directories are: 
         Mac OS X:   /Library/Application Support/<AppName> 
         Unix:       /usr/local/share/<AppName> or /usr/share/<AppName> 
         Win XP:     C:\Documents and Settings\All Users\Application Data\<AppAuthor>\<AppName> 
         Vista:      (Fail! "C:\ProgramData" is a hidden system directory on Vista.) 
         Win 7:      C:\ProgramData\<AppAuthor>\<AppName>   # Hidden, but writeable on Win 7. 
  
     For Unix, this is using the $XDG_DATA_DIRS[0] default. 
  
     WARNING: Do not use this on Windows. See the Vista-Fail note above for why. 
     rN�CSIDL_COMMON_APPDATAFr        z/Library/Application Support� XDG_DATA_DIRSz/usr/local/sharez 
 /usr/sharecSs g|]}tj�|�tj���qSr)rrr�rstrip�sep)�.0�xrrr� 
 <listcomp>�sz!site_data_dir.<locals>.<listcomp>csg|]}tj�|�g��qSr)rr r)r!r")rrrr#�sr) 
 r rrrrrrr�pathsep�split)rrr�	multipathr�pathlistr)rr� site_data_dirds4r(cCsXtdkrt||d|�}n&t�dtj�d��}|r>tj�||�}|rT|rTtj�||�}|S)a�Return full path to the user-specific config dir for this application. 
  
         "appname" is the name of application. 
             If None, just the system directory is returned. 
         "appauthor" (only used on Windows) is the name of the 
             appauthor or distributing body for this application. Typically 
             it is the owning company name. This falls back to appname. You may 
             pass False to disable it. 
         "version" is an optional version path element to append to the 
             path. You might want to use this if you want multiple versions 
             of your app to be able to run independently. If used, this 
             would typically be "<major>.<minor>". 
             Only applied when appname is present. 
         "roaming" (boolean, default False) can be set True to use the Windows 
             roaming appdata directory. That means that for users on a Windows 
             network setup for roaming profiles, this user data will be 
             sync'd on login. See 
             <http://technet.microsoft.com/en-us/library/cc766489(WS.10).aspx> 
             for a discussion of issues. 
  
     Typical user config directories are: 
         Mac OS X:               same as user_data_dir 
         Unix:                   ~/.config/<AppName>     # or in $XDG_CONFIG_HOME, if defined 
         Win *:                  same as user_data_dir 
  
     For Unix, we follow the XDG spec and support $XDG_CONFIG_HOME. 
     That means, by default "~/.config/<AppName>". 
 )rr	N�XDG_CONFIG_HOMEz	~/.config)r rrrrrr)rrrrrrrr�user_config_dir�sr*cs�tdkr*t�|�}�r�|r�tj�||�}ndt�dd�}dd�|�tj�D�}�rt|rbtj��|���fdd�|D�}|r�tj�|�}n|d}|S)aReturn full path to the user-shared data dir for this application. 
  
         "appname" is the name of application. 
             If None, just the system directory is returned. 
         "appauthor" (only used on Windows) is the name of the 
             appauthor or distributing body for this application. Typically 
             it is the owning company name. This falls back to appname. You may 
             pass False to disable it. 
         "version" is an optional version path element to append to the 
             path. You might want to use this if you want multiple versions 
             of your app to be able to run independently. If used, this 
             would typically be "<major>.<minor>". 
             Only applied when appname is present. 
         "multipath" is an optional parameter only applicable to *nix 
             which indicates that the entire list of config dirs should be 
             returned. By default, the first item from XDG_CONFIG_DIRS is 
             returned, or '/etc/xdg/<AppName>', if XDG_CONFIG_DIRS is not set 
  
     Typical site config directories are: 
         Mac OS X:   same as site_data_dir 
         Unix:       /etc/xdg/<AppName> or $XDG_CONFIG_DIRS[i]/<AppName> for each value in 
                     $XDG_CONFIG_DIRS 
         Win *:      same as site_data_dir 
         Vista:      (Fail! "C:\ProgramData" is a hidden system directory on Vista.) 
  
     For Unix, this is using the $XDG_CONFIG_DIRS[0] default, if multipath=False 
  
     WARNING: Do not use this on Windows. See the Vista-Fail note above for why. 
 )rr	�XDG_CONFIG_DIRSz/etc/xdgcSs g|]}tj�|�tj���qSr)rrrrr )r!r"rrrr#�sz#site_config_dir.<locals>.<listcomp>csg|]}tj�|�g��qSr)rr r)r!r")rrrr#�sr)r r(rrrrr%r$)rrrr&rr'r)rr�site_config_dir�s 
 r,TcCs�tdkrd|dkr|}tj�td��}|r�|dk	rBtj�|||�}ntj�||�}|r�tj�|d�}nNtdkr�tj�d�}|r�tj�||�}n&t�dtj�d	��}|r�tj�||�}|r�|r�tj�||�}|S) 
 aReturn full path to the user-specific cache dir for this application. 
  
         "appname" is the name of application. 
             If None, just the system directory is returned. 
         "appauthor" (only used on Windows) is the name of the 
             appauthor or distributing body for this application. Typically 
             it is the owning company name. This falls back to appname. You may 
             pass False to disable it. 
         "version" is an optional version path element to append to the 
             path. You might want to use this if you want multiple versions 
             of your app to be able to run independently. If used, this 
             would typically be "<major>.<minor>". 
             Only applied when appname is present. 
         "opinion" (boolean) can be False to disable the appending of 
             "Cache" to the base app data dir for Windows. See 
             discussion below. 
  
     Typical user cache directories are: 
         Mac OS X:   ~/Library/Caches/<AppName> 
         Unix:       ~/.cache/<AppName> (XDG default) 
         Win XP:     C:\Documents and Settings\<username>\Local Settings\Application Data\<AppAuthor>\<AppName>\Cache 
         Vista:      C:\Users\<username>\AppData\Local\<AppAuthor>\<AppName>\Cache 
  
     On Windows the only suggestion in the MSDN docs is that local settings go in 
     the `CSIDL_LOCAL_APPDATA` directory. This is identical to the non-roaming 
     app data dir (the default returned by `user_data_dir` above). Apps typically 
     put cache data somewhere under the given dir here. Some examples: 
         ...\Mozilla\Firefox\Profiles\<ProfileName>\Cache 
         ...\Acme\SuperApp\Cache\1.0 
     OPINION: This function appends "Cache" to the `CSIDL_LOCAL_APPDATA` value. 
     This can be disabled with the `opinion=False` option. 
 rNrF�Cacher	z~/Library/Caches�XDG_CACHE_HOMEz~/.cache)r rrrrrrr)rrr�opinionrrrr�user_cache_dirs(!r0cCsXtdkrt||d|�}n&t�dtj�d��}|r>tj�||�}|rT|rTtj�||�}|S)aReturn full path to the user-specific state dir for this application. 
  
         "appname" is the name of application. 
             If None, just the system directory is returned. 
         "appauthor" (only used on Windows) is the name of the 
             appauthor or distributing body for this application. Typically 
             it is the owning company name. This falls back to appname. You may 
             pass False to disable it. 
         "version" is an optional version path element to append to the 
             path. You might want to use this if you want multiple versions 
             of your app to be able to run independently. If used, this 
             would typically be "<major>.<minor>". 
             Only applied when appname is present. 
         "roaming" (boolean, default False) can be set True to use the Windows 
             roaming appdata directory. That means that for users on a Windows 
             network setup for roaming profiles, this user data will be 
             sync'd on login. See 
             <http://technet.microsoft.com/en-us/library/cc766489(WS.10).aspx> 
             for a discussion of issues. 
  
     Typical user state directories are: 
         Mac OS X:  same as user_data_dir 
         Unix:      ~/.local/state/<AppName>   # or in $XDG_STATE_HOME, if defined 
         Win *:     same as user_data_dir 
  
     For Unix, we follow this Debian proposal <https://wiki.debian.org/XDGBaseDirectorySpecification#state> 
     to extend the XDG spec and support $XDG_STATE_HOME. 
  
     That means, by default "~/.local/state/<AppName>". 
 )rr	N�XDG_STATE_HOMEz~/.local/state)r rrrrrr)rrrrrrrr�user_state_dir:sr2cCs�tdkr tj�tj�d�|�}nNtdkrLt|||�}d}|rntj�|d�}n"t|||�}d}|rntj�|d�}|r�|r�tj�||�}|S)a�Return full path to the user-specific log dir for this application. 
  
         "appname" is the name of application. 
             If None, just the system directory is returned. 
         "appauthor" (only used on Windows) is the name of the 
             appauthor or distributing body for this application. Typically 
             it is the owning company name. This falls back to appname. You may 
             pass False to disable it. 
         "version" is an optional version path element to append to the 
             path. You might want to use this if you want multiple versions 
             of your app to be able to run independently. If used, this 
             would typically be "<major>.<minor>". 
             Only applied when appname is present. 
         "opinion" (boolean) can be False to disable the appending of 
             "Logs" to the base app data dir for Windows, and "log" to the 
             base cache dir for Unix. See discussion below. 
  
     Typical user log directories are: 
         Mac OS X:   ~/Library/Logs/<AppName> 
         Unix:       ~/.cache/<AppName>/log  # or under $XDG_CACHE_HOME if defined 
         Win XP:     C:\Documents and Settings\<username>\Local Settings\Application Data\<AppAuthor>\<AppName>\Logs 
         Vista:      C:\Users\<username>\AppData\Local\<AppAuthor>\<AppName>\Logs 
  
     On Windows the only suggestion in the MSDN docs is that local settings 
     go in the `CSIDL_LOCAL_APPDATA` directory. (Note: I'm interested in 
     examples of what some windows apps use for a logs dir.) 
  
     OPINION: This function appends "Logs" to the `CSIDL_LOCAL_APPDATA` 
     value for Windows and appends "log" to the user cache dir for Unix. 
     This can be disabled with the `opinion=False` option. 
 r	z~/Library/LogsrF�Logs�log)r rrrrrr0)rrrr/rrrr�user_log_dirds  
 r5c@sneZdZdZddd�Zedd��Zedd	��Zed 
 d��Zedd ��Z        edd��Z 
 edd��Zedd��ZdS)�AppDirsz1Convenience wrapper for getting application dirs.NFcCs"||||||||||dS)N)rrrrr&)�selfrrrrr&rrr�init_�s 
 zAppDirs._init_cCst|j|j|j|jd�S)N)rr)rrrrr)r7rrrr�s 
 zAppDirs.user_data_dircCst|j|j|j|jd�S)N)rr&)r(rrrr&)r7rrrr(�s 
 zAppDirs.site_data_dircCst|j|j|j|jd�S)N)rr)r*rrrr)r7rrrr*�s 
 zAppDirs.user_config_dircCst|j|j|j|jd�S)N)rr&)r,rrrr&)r7rrrr,�s 
 zAppDirs.site_config_dircCst|j|j|jd�S)N)r)r0rrr)r7rrrr0�s 
 zAppDirs.user_cache_dircCst|j|j|jd�S)N)r)r2rrr)r7rrrr2�s 
 zAppDirs.user_state_dircCst|j|j|jd�S)N)r)r5rrr)r7rrrr5�s 
 zAppDirs.user_log_dir)NNNFF) �_name_� 
 _module�qualname�doc_r8�propertyrr(r*r,r0r2r5rrrrr6�s 
 r6cCsHtrddl}nddl}dddd�|}|�|jd�}|�||�\}}|S)z�This is a fallback technique at best. I'm not sure if using the 
     registry for this guarantees us the correct answer for all CSIDL_* 
     names. 
     rN�AppDatazCommon AppDataz Local AppData)r 
 rrz@Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders)�PY3�winreg�_winreg�OpenKey�HKEY_CURRENT_USER�QueryValueEx)� 
 csidl_namerA�shell_folder_name�key�dir�typerrr�_get_win_folder_from_registry�s 
 rJcCs�ddlm}m}|�dt||�dd�}y`t|�}d}x|D]}t|�dkr:d}Pq:W|r�yddl}|�|�}Wnt	k 
 r�YnXWnt 
 k 
 r�YnX|S)Nr)�shellcon�shellF��T)�win32com.shellrKrL�SHGetFolderPath�getattr�unicode�ord�win32api�GetShortPathName�ImportError�UnicodeError)rErKrLrH� has_high_char�crSrrr�_get_win_folder_with_pywin32�s$ 
  
 rYcCs�ddl}dddd�|}|�d�}|jj�d|dd|�d}x|D]}t|�dkrBd	}PqBW|r�|�d�}|jj�|j|d�r�|}|jS) 
 Nr��#�)r 
 rriFrMT)	�ctypes�create_unicode_buffer�windll�shell32�SHGetFolderPathWrR�kernel32�GetShortPathNameW�value)rEr]�csidl_const�bufrWrX�buf2rrr�_get_win_folder_with_ctypes�s" 
  
  
 rhcCs�ddl}ddlm}ddlm}|jjd}|�d|�}|jj	}|� 
 dt|j|�d|jj |�|j�|����d�}d}x|D]}        t|        �dkr~d        }Pq~W|r�|�d|�}|jj        } 
 | 
 �|||�r�|j�|����d�}|S) 
 Nr)�jna)r�rX�FrMT)�array�com.sunri�com.sun.jna.platformr�WinDef�MAX_PATH�zeros�Shell32�INSTANCErOrP�ShlObj�SHGFP_TYPE_CURRENT�Native�toString�tostringrrR�Kernel32rT)rErlrir�buf_sizerfrLrHrWrX�kernelrrr�_get_win_folder_with_jnas& 
 r|)r_�_main_ZMyAppZ	MyCompany)rr*r0r2r5r(r,z-- app dirs %s --z%-- app dirs (with optional 'version')z1.0)rz%s: %sz) 
 -- app dirs (without optional 'version')z+ 
 -- app dirs (without optional 'appauthor')z( 
 -- app dirs (with disabled 'appauthor'))r)NNNF)NNNF)NNNF)NNNF)NNNT)NNNF)NNNT)-r<�_version_infor�map�str�version_�sysr�version_infor?rQ�platform� 
 startswith�java_ver�os_namer rr(r*r,r0r2r5�objectr6rJrYrhr|rNZwin32comrrUr]r_Zcom.sun.jna�comr9rr�props�print�dirs�proprPrrrr�<module>	s~ 
  
  
 7 
 B 
 ( 
 3 
 9 
 * 
 30
